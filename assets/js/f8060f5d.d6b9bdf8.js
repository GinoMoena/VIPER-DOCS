"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2239],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>y});var o=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var m=o.createContext({}),l=function(e){var t=o.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},s=function(e){var t=l(e.components);return o.createElement(m.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,m=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),c=l(n),u=i,y=c["".concat(m,".").concat(u)]||c[u]||p[u]||a;return n?o.createElement(y,r(r({ref:t},s),{},{components:n})):o.createElement(y,r({ref:t},s))}));function y(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,r=new Array(a);r[0]=u;var d={};for(var m in t)hasOwnProperty.call(t,m)&&(d[m]=t[m]);d.originalType=e,d[c]="string"==typeof e?e:i,r[1]=d;for(var l=2;l<a;l++)r[l]=n[l];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1959:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>d,toc:()=>l});var o=n(7462),i=(n(7294),n(3905));const a={sidebar_position:1},r="GameScene",d={unversionedId:"ECS/Scene",id:"ECS/Scene",title:"GameScene",description:"M\xe9todos",source:"@site/docs/ECS/Scene.md",sourceDirName:"ECS",slug:"/ECS/Scene",permalink:"/VIPER-DOCS/docs/ECS/Scene",draft:!1,editUrl:"https://github.com/GinoMoena/VIPER-DOCS/tree/main/docs/ECS/Scene.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Entity-Component System",permalink:"/VIPER-DOCS/docs/category/entity-component-system"},next:{title:"Entity",permalink:"/VIPER-DOCS/docs/ECS/Entity"}},m={},l=[{value:"M\xe9todos",id:"m\xe9todos",level:3},{value:"<code>int</code> CreateEntity (bool addTransform<code>=false</code>)",id:"int-createentity-bool-addtransformfalse",level:4},{value:"<code>void</code> AddComponent(int entity, Component component)",id:"void-addcomponentint-entity-component-component",level:4},{value:"<code>Bag&lt;int&gt;</code> GetEntitiesWithComponent&lt;T&gt; where T : Component",id:"bagint-getentitieswithcomponentt-where-t--component",level:4},{value:"<code>void</code> RemoveComponent&lt;T&gt;(int entity) where T : Component",id:"void-removecomponenttint-entity-where-t--component",level:4},{value:"<code>void</code> HasComponent&lt;T&gt;(int entity) where T : Component",id:"void-hascomponenttint-entity-where-t--component",level:4},{value:"<code>void</code> HasSystem&lt;T&gt;() where T : GameSystem",id:"void-hassystemt-where-t--gamesystem",level:4},{value:"<code>void</code> DeleteEntity(int entity)",id:"void-deleteentityint-entity",level:4},{value:"<code>T</code> GetComponent&lt;T&gt;(int entity) where T : Component",id:"t-getcomponenttint-entity-where-t--component",level:4},{value:"<code>void</code> AttachSystem(GameSystem system)",id:"void-attachsystemgamesystem-system",level:4}],s={toc:l},c="wrapper";function p(e){let{components:t,...n}=e;return(0,i.kt)(c,(0,o.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"gamescene"},"GameScene"),(0,i.kt)("h3",{id:"m\xe9todos"},"M\xe9todos"),(0,i.kt)("h4",{id:"int-createentity-bool-addtransformfalse"},(0,i.kt)("inlineCode",{parentName:"h4"},"int")," CreateEntity (bool addTransform",(0,i.kt)("inlineCode",{parentName:"h4"},"=false"),")"),(0,i.kt)("p",null,"Crea una entidad y devuelve el id de la entidad. En esencia las entidades son simplemente un id, cualquier par\xe1metro que se necesite agregar a la entidad se transforma en un componente."),(0,i.kt)("h4",{id:"void-addcomponentint-entity-component-component"},(0,i.kt)("inlineCode",{parentName:"h4"},"void")," AddComponent(int entity, Component component)"),(0,i.kt)("p",null,"Agrega el componente ",(0,i.kt)("inlineCode",{parentName:"p"},"component")," a la entidad ",(0,i.kt)("inlineCode",{parentName:"p"},"entity"),"."),(0,i.kt)("h4",{id:"bagint-getentitieswithcomponentt-where-t--component"},(0,i.kt)("inlineCode",{parentName:"h4"},"Bag<int>")," GetEntitiesWithComponent","<","T",">"," where T : Component"),(0,i.kt)("p",null,"Retorna una lista no ordenada de tipo ",(0,i.kt)("inlineCode",{parentName:"p"},"int")," con las entidades que contienen un componente de tipo T. Es \xfatil para sistemas que necesitan actualizar cierto tipo de componente y solo necesitan las entidades que utilicen ese componente."),(0,i.kt)("h4",{id:"void-removecomponenttint-entity-where-t--component"},(0,i.kt)("inlineCode",{parentName:"h4"},"void")," RemoveComponent","<","T",">","(int entity) where T : Component"),(0,i.kt)("p",null,"Remueve el componente de tipo T en la entidad ",(0,i.kt)("inlineCode",{parentName:"p"},"entity")),(0,i.kt)("h4",{id:"void-hascomponenttint-entity-where-t--component"},(0,i.kt)("inlineCode",{parentName:"h4"},"void")," HasComponent","<","T",">","(int entity) where T : Component"),(0,i.kt)("p",null,"Permite saber si la entidad ",(0,i.kt)("inlineCode",{parentName:"p"},"entity")," tiene el componente ",(0,i.kt)("inlineCode",{parentName:"p"},"T"),"."),(0,i.kt)("h4",{id:"void-hassystemt-where-t--gamesystem"},(0,i.kt)("inlineCode",{parentName:"h4"},"void")," HasSystem","<","T",">","() where T : GameSystem"),(0,i.kt)("p",null,"Permite saber si el sistema tiene inicializado alg\xfan tipo de sistema. Por ahora no se ha utilizado pero podr\xeda ser \xfatil si se necesita agregar o quitar sistemas dinamicamente."),(0,i.kt)("h4",{id:"void-deleteentityint-entity"},(0,i.kt)("inlineCode",{parentName:"h4"},"void")," DeleteEntity(int entity)"),(0,i.kt)("p",null,"Permite eliminar la entidad ",(0,i.kt)("inlineCode",{parentName:"p"},"entity")),(0,i.kt)("h4",{id:"t-getcomponenttint-entity-where-t--component"},(0,i.kt)("inlineCode",{parentName:"h4"},"T")," GetComponent","<","T",">","(int entity) where T : Component"),(0,i.kt)("p",null,"Permite acceder al componente de una entidad, es bastante \xfatil y se utiliza frecuentemente en los sistemas para actualizar los componentes de entidades. Se puede facilitar el acceso utilizando EntityManager.GetComponent","<","T",">","(int entity) que es un atajo para este mismo m\xe9todo."),(0,i.kt)("h4",{id:"void-attachsystemgamesystem-system"},(0,i.kt)("inlineCode",{parentName:"h4"},"void")," AttachSystem(GameSystem system)"),(0,i.kt)("p",null,"Permite agregar un sistem a la escena. Una vez se ha agregado un sistema este autom\xe1ticamente funcionar\xe1."))}p.isMDXComponent=!0}}]);