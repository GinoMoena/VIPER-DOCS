"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introducci\xf3n","href":"/VIPER-DOCS/docs/intro","docId":"intro"},{"type":"category","label":"Engine","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Animaciones","href":"/VIPER-DOCS/docs/Engine/animation","docId":"Engine/animation"},{"type":"link","label":"Camera","href":"/VIPER-DOCS/docs/Engine/camera","docId":"Engine/camera"},{"type":"link","label":"Fullscreen","href":"/VIPER-DOCS/docs/Engine/fullscreen","docId":"Engine/fullscreen"},{"type":"link","label":"Game Manager (Singleton)","href":"/VIPER-DOCS/docs/Engine/game_manager","docId":"Engine/game_manager"},{"type":"link","label":"Graphics","href":"/VIPER-DOCS/docs/Engine/graphics","docId":"Engine/graphics"},{"type":"link","label":"Input","href":"/VIPER-DOCS/docs/Engine/input","docId":"Engine/input"},{"type":"link","label":"Physics","href":"/VIPER-DOCS/docs/Engine/physics","docId":"Engine/physics"},{"type":"link","label":"Screen","href":"/VIPER-DOCS/docs/Engine/screen","docId":"Engine/screen"},{"type":"link","label":"UI","href":"/VIPER-DOCS/docs/Engine/ui","docId":"Engine/ui"}],"href":"/VIPER-DOCS/docs/category/engine"},{"type":"category","label":"Entity-Component System","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"GameScene","href":"/VIPER-DOCS/docs/ECS/Scene","docId":"ECS/Scene"},{"type":"link","label":"Entity","href":"/VIPER-DOCS/docs/ECS/Entity","docId":"ECS/Entity"},{"type":"link","label":"Component","href":"/VIPER-DOCS/docs/ECS/Component","docId":"ECS/Component"},{"type":"category","label":"Utilities","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Command","href":"/VIPER-DOCS/docs/ECS/Components/Command","docId":"ECS/Components/Command"},{"type":"link","label":"CommandBuffer","href":"/VIPER-DOCS/docs/ECS/Components/CommandBuffer","docId":"ECS/Components/CommandBuffer"},{"type":"link","label":"EntityManager","href":"/VIPER-DOCS/docs/ECS/Components/EntityManager","docId":"ECS/Components/EntityManager"},{"type":"link","label":"TagComponent","href":"/VIPER-DOCS/docs/ECS/Components/TagComponent","docId":"ECS/Components/TagComponent"},{"type":"link","label":"Transform","href":"/VIPER-DOCS/docs/ECS/Components/Transform","docId":"ECS/Components/Transform"}],"href":"/VIPER-DOCS/docs/category/utilities"},{"type":"link","label":"GameSystem","href":"/VIPER-DOCS/docs/ECS/System","docId":"ECS/System"}],"href":"/VIPER-DOCS/docs/category/entity-component-system"},{"type":"category","label":"Extras","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"FrameDataComponent","href":"/VIPER-DOCS/docs/Extras/FrameDataComponent","docId":"Extras/FrameDataComponent"},{"type":"link","label":"MapEditor","href":"/VIPER-DOCS/docs/Extras/mapeditor","docId":"Extras/mapeditor"},{"type":"link","label":"TextDisplay","href":"/VIPER-DOCS/docs/Extras/textdisplay","docId":"Extras/textdisplay"}],"href":"/VIPER-DOCS/docs/category/extras"}]},"docs":{"ECS/Component":{"id":"ECS/Component","title":"Component","description":"Atributos","sidebar":"tutorialSidebar"},"ECS/Components/Command":{"id":"ECS/Components/Command","title":"Command","description":"Esta clase es una clase bastante simple que viene del patr\xf3n de dise\xf1o Command. Lo que hace es que se abstraiga la l\xf3gica de ejecuci\xf3n a un m\xe9todo y de esta forma tener una especie de m\xe9todo transportable dentro de un objeto. En el caso de la aplicaci\xf3n se utiliza para almacenar acciones en un buffer, esto es bastante \xfatil para evitar acciones frame perfect y hacer el juego m\xe1s amigable.","sidebar":"tutorialSidebar"},"ECS/Components/CommandBuffer":{"id":"ECS/Components/CommandBuffer","title":"CommandBuffer","description":"CommandBuffer es un componente que almacena una serie de comandos en una cola de un tama\xf1o determinado por el usuario (por defecto es 10). La idea de este componente es que sirva de ayuda para tener acciones buffereadas en el juego como por ejemplo al caer de un salto y presionar la tecla de salto nuevamente prevenir que el input de salto sea \\"comido\\" por el estado de aire y se pueda agendar para cuando toque el suelo en un tiempo de espera m\xe1ximo de 10 frames.","sidebar":"tutorialSidebar"},"ECS/Components/EntityManager":{"id":"ECS/Components/EntityManager","title":"EntityManager","description":"EntityManager","sidebar":"tutorialSidebar"},"ECS/Components/TagComponent":{"id":"ECS/Components/TagComponent","title":"TagComponent","description":"Componente que permite agregar un tag a una entidad. Parecido a los tags de Unity. Dentro del archivo hay un enum de tipo Tag que contiene las definiciones de Tag por default, se pueden agregar m\xe1s en caso de que sea necesario.","sidebar":"tutorialSidebar"},"ECS/Components/Transform":{"id":"ECS/Components/Transform","title":"Transform","description":"Componente para manejar informaci\xf3n de la entidad en el espacio.","sidebar":"tutorialSidebar"},"ECS/Entity":{"id":"ECS/Entity","title":"Entity","description":"Las entidades en el ECS del engine son simplemente un entero, por lo que no tienen representaci\xf3n a trav\xe9s de una clase. Hay una utilidad que permite facilitar el acceso a componentes de una entidad, para m\xe1s informaci\xf3n revisar la secci\xf3n EntityManager.","sidebar":"tutorialSidebar"},"ECS/Scene":{"id":"ECS/Scene","title":"GameScene","description":"M\xe9todos","sidebar":"tutorialSidebar"},"ECS/System":{"id":"ECS/System","title":"GameSystem","description":"Clase abstracta para crear sistema de juego, estos se pueden inicializar en una escena a trav\xe9s de AttachSystem(new MySystem()).","sidebar":"tutorialSidebar"},"Engine/animation":{"id":"Engine/animation","title":"Animaciones","description":"Este componente no est\xe1 siendo actualizado actualmente, se est\xe1 utilizando en su lugar FrameDataComponent.","sidebar":"tutorialSidebar"},"Engine/camera":{"id":"Engine/camera","title":"Camera","description":"La c\xe1mara es un componente que servir\xe1 para desplazar los elementos con un offset a modo de simular el seguimiento de un objeto.","sidebar":"tutorialSidebar"},"Engine/fullscreen":{"id":"Engine/fullscreen","title":"Fullscreen","description":"Este componente se encargar\xe1 de la visualizaci\xf3n en pantalla completa.","sidebar":"tutorialSidebar"},"Engine/game_manager":{"id":"Engine/game_manager","title":"Game Manager (Singleton)","description":"Atributos","sidebar":"tutorialSidebar"},"Engine/graphics":{"id":"Engine/graphics","title":"Graphics","description":"Esta secci\xf3n est\xe1 dedicada a utilidades para dibujar en pantalla diversas formas, o con diversas transformaciones.","sidebar":"tutorialSidebar"},"Engine/input":{"id":"Engine/input","title":"Input","description":"Este clase almacena todos los registros de inputs registrados desde el teclado y mouse. Si bien Monogame ya incluye una clase Input esta versi\xf3n agrega m\xe9todos \xfatiles para el flujo del juego, estos m\xe9todos se describen a continuaci\xf3n.","sidebar":"tutorialSidebar"},"Engine/physics":{"id":"Engine/physics","title":"Physics","description":"Aqui se agregan componentes que utilizan l\xf3gica matem\xe1tica para el movimiento como se realiza en juegos por ejemplo de tipo plataforma2D.","sidebar":"tutorialSidebar"},"Engine/screen":{"id":"Engine/screen","title":"Screen","description":"Screen es un componente que funciona como un RenderTarget. La idea es simplificar este proceso de creaci\xf3n de render Target funcionando simplemente como un lienzo que uno activa a trav\xe9s de screen.Set() dibuja y luego desactiva el lienzo con screen.UnSet(). Finalmente al momento de pintar elementos se puede utilizar screen como si fuera una textura, esto permite escalar, rotar, transformar el lienzo original, adem\xe1s de otros tratamientos que se aplican al dibujo a trav\xe9s de SpriteBatch.","sidebar":"tutorialSidebar"},"Engine/ui":{"id":"Engine/ui","title":"UI","description":"Esta secci\xf3n est\xe1 dedicada a todos los elementos que contribuyen al UI de la aplicaci\xf3n / videojuego","sidebar":"tutorialSidebar"},"Extras/FrameDataComponent":{"id":"Extras/FrameDataComponent","title":"FrameDataComponent","description":"FrameDataComponent es un componente que gestiona una animaci\xf3n del tipo FrameData. Este tipo de datos se generan a partir de la aplicaci\xf3n FrameDataManager creada para manejar animaciones junto a sus hitboxes o cajas de colisiones de distintos tipos.","sidebar":"tutorialSidebar"},"Extras/mapeditor":{"id":"Extras/mapeditor","title":"MapEditor","description":"Map editor es una herramienta interna que permite generar mapas a trav\xe9s de la misma aplicaci\xf3n.","sidebar":"tutorialSidebar"},"Extras/textdisplay":{"id":"Extras/textdisplay","title":"TextDisplay","description":"Este componente tiene dos grandes utilidades, la primera es obtener textos desde un archivo el cual puede ser modificable para agregar m\xe1s textos o modificar el idioma de los textos para ayudar con la internacionalizaci\xf3n.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Introducci\xf3n","description":"Viper engine es un motor de videojuegos 2D hecho en Monogame. Implementa el sistema de Entidad-Componente-Escena y agrega algunas funcionalidades de herramientas de importaci\xf3n para el manejo de datos.","sidebar":"tutorialSidebar"}}}')}}]);