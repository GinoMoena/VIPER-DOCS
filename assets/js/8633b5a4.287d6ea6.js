"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3649],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>v});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var d=a.createContext({}),s=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(d.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,d=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=s(n),m=o,v=p["".concat(d,".").concat(m)]||p[m]||u[m]||r;return n?a.createElement(v,i(i({ref:t},c),{},{components:n})):a.createElement(v,i({ref:t},c))}));function v(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[p]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<r;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6262:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var a=n(7462),o=(n(7294),n(3905));const r={sidebar_position:2},i="Entity",l={unversionedId:"ECS/entity",id:"ECS/entity",title:"Entity",description:"Atributos",source:"@site/docs/ECS/entity.md",sourceDirName:"ECS",slug:"/ECS/entity",permalink:"/VIPER-DOCS/docs/ECS/entity",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ECS/entity.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Scene",permalink:"/VIPER-DOCS/docs/ECS/scene"},next:{title:"Component",permalink:"/VIPER-DOCS/docs/ECS/component"}},d={},s=[{value:"Atributos",id:"atributos",level:3},{value:"componentList <code>List&lt;Component&gt;</code>",id:"componentlist-listcomponent",level:4},{value:"Layer",id:"layer",level:4},{value:"Position",id:"position",level:4},{value:"Origin",id:"origin",level:4},{value:"FlipX",id:"flipx",level:4},{value:"FlipY",id:"flipy",level:4},{value:"M\xe9todos",id:"m\xe9todos",level:3},{value:"AddComponent(Component comp)",id:"addcomponentcomponent-comp",level:4},{value:"GetComponent &lt;T&gt; where T : Component",id:"getcomponent-t-where-t--component",level:4},{value:"DrawPositionPointer",id:"drawpositionpointer",level:4},{value:"Initialize <code>virtual</code>",id:"initialize-virtual",level:4},{value:"Update <code>virtual</code>",id:"update-virtual",level:4},{value:"Draw <code>abstract</code>",id:"draw-abstract",level:4},{value:"DrawHD <code>abstract</code>",id:"drawhd-abstract",level:4}],c={toc:s},p="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"entity"},"Entity"),(0,o.kt)("h3",{id:"atributos"},"Atributos"),(0,o.kt)("h4",{id:"componentlist-listcomponent"},"componentList ",(0,o.kt)("inlineCode",{parentName:"h4"},"List<Component>")),(0,o.kt)("p",null,"Almacena la lista de componentes que pertenecen a la entidad actual. Si se quiere registrar un componente se debe utilizar ",(0,o.kt)("inlineCode",{parentName:"p"},"AddComponent(component)"),". Utilizar esta lista s\xf3lo para leer datos, no para insertar componentes nuevos."),(0,o.kt)("h4",{id:"layer"},"Layer"),(0,o.kt)("p",null,"Determina la capa de prioridad donde se dibujar\xe1 la entidad."),(0,o.kt)("h4",{id:"position"},"Position"),(0,o.kt)("p",null,"La posici\xf3n de la entidad dentro de la escena"),(0,o.kt)("h4",{id:"origin"},"Origin"),(0,o.kt)("p",null,"El punto de origen en la entidad (limitados dentro del cuadrado(0.0, 0.0), (1.0,1.0))."),(0,o.kt)("h4",{id:"flipx"},"FlipX"),(0,o.kt)("p",null,"Se muestra la textura en modo espejo en el eje X."),(0,o.kt)("h4",{id:"flipy"},"FlipY"),(0,o.kt)("p",null,"Se muestra la textura en modo espejo en el eje Y."),(0,o.kt)("h3",{id:"m\xe9todos"},"M\xe9todos"),(0,o.kt)("p",null,"Dado que Scene es una clase abstracta se debe utilizar herencia. Los m\xe9todos marcados como ",(0,o.kt)("inlineCode",{parentName:"p"},"virtual")," deben ser implementados."),(0,o.kt)("h4",{id:"addcomponentcomponent-comp"},"AddComponent(Component comp)"),(0,o.kt)("p",null,"Permite agregar un componente a la entidad. Es importante utilizar este m\xe9todo en lugar de agregarlo en la lista directamente, esto permitir\xe1 que la carga del componente sea la correcta y se pueda ejecutar el m\xe9todo Initialize sin problemas."),(0,o.kt)("h4",{id:"getcomponent-t-where-t--component"},"GetComponent ","<","T",">"," where T : Component"),(0,o.kt)("p",null,"Permite obtener un componente que ya ha sido agregado a la entidad. En caso de que no exista devolver\xe1 nulo. Es especialmente \xfatil si durante un m\xe9todo update necesito hacer un check de alg\xfan componente."),(0,o.kt)("h4",{id:"drawpositionpointer"},"DrawPositionPointer"),(0,o.kt)("p",null,"Se puede utilizar para dibujar una cruz sobre la posici\xf3n de la entidad actual. Esto es \xfatil para mantener un seguimiento visual de la entidad en caso de que no tenga una textura agregada como componente o su m\xe9todo draw no dibuje nada. La ejecuci\xf3n de este DrawPositionPointer debe realizarse dentro de alguno de los m\xe9todos Draw."),(0,o.kt)("h4",{id:"initialize-virtual"},"Initialize ",(0,o.kt)("inlineCode",{parentName:"h4"},"virtual")),(0,o.kt)("p",null,"M\xe9todo que inicializa la entidad. En este punto la entidad tiene acceso a la escena donde se ha agregado por lo que este m\xe9todo es \xfatil si se necesita obtener informaci\xf3n o interactuar con alguna propiedad de la escena."),(0,o.kt)("h4",{id:"update-virtual"},"Update ",(0,o.kt)("inlineCode",{parentName:"h4"},"virtual")),(0,o.kt)("p",null,"M\xe9todo para actualizar la entidad cuadro por cuadro. Es importante que al igual que en otros casos este m\xe9todo se ejecute manteniendo la ejecuci\xf3n del m\xe9todo base. Esto para que el m\xe9todo base sea capaz de actualizar los componentes que pertenecen a esta entidad."),(0,o.kt)("h4",{id:"draw-abstract"},"Draw ",(0,o.kt)("inlineCode",{parentName:"h4"},"abstract")),(0,o.kt)("p",null,"M\xe9todo para dibujar las texturas necesarias por la entidad. Como los componentes no requieren necesariamente ser impresos, este m\xe9todo es \xfatil para llamar alg\xfan m\xe9todo Draw creado en un componente para dibujar sobre la entidad."),(0,o.kt)("h4",{id:"drawhd-abstract"},"DrawHD ",(0,o.kt)("inlineCode",{parentName:"h4"},"abstract")),(0,o.kt)("p",null,"Misma l\xf3gica anterior esta vez para dibujar en modo HD. Si ",(0,o.kt)("inlineCode",{parentName:"p"},"HD_MODE=true")," este m\xe9todo se ejecutara en lugar de m\xe9todo Draw."))}u.isMDXComponent=!0}}]);