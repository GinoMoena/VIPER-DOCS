"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6416],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>k});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(a),m=o,k=p["".concat(s,".").concat(m)]||p[m]||d[m]||r;return a?n.createElement(k,i(i({ref:t},u),{},{components:a})):n.createElement(k,i({ref:t},u))}));function k(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,i=new Array(r);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<r;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},1122:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var n=a(7462),o=(a(7294),a(3905));const r={},i="Input",l={unversionedId:"Engine/input",id:"Engine/input",title:"Input",description:"Este clase almacena todos los registros de inputs registrados desde el teclado y mouse. Si bien Monogame ya incluye una clase Input esta versi\xf3n agrega m\xe9todos \xfatiles para el flujo del juego, estos m\xe9todos se describen a continuaci\xf3n.",source:"@site/docs/Engine/input.md",sourceDirName:"Engine",slug:"/Engine/input",permalink:"/VIPER-DOCS/docs/Engine/input",draft:!1,editUrl:"https://github.com/GinoMoena/VIPER-DOCS/tree/main/docs/Engine/input.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Graphics",permalink:"/VIPER-DOCS/docs/Engine/graphics"},next:{title:"Physics",permalink:"/VIPER-DOCS/docs/Engine/physics"}},s={},c=[{value:"GetKeyDown(Keys key)",id:"getkeydownkeys-key",level:3},{value:"GetKeyUp(Keys key)",id:"getkeyupkeys-key",level:3},{value:"GetKey(Keys key)",id:"getkeykeys-key",level:3},{value:"LeftClick",id:"leftclick",level:3},{value:"RightClick",id:"rightclick",level:3},{value:"MousePosition",id:"mouseposition",level:3},{value:"GameInput <code>class</code>",id:"gameinput-class",level:2},{value:"GamepadVirtual <code>class</code>",id:"gamepadvirtual-class",level:2}],u={toc:c},p="wrapper";function d(e){let{components:t,...a}=e;return(0,o.kt)(p,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"input"},"Input"),(0,o.kt)("p",null,"Este clase almacena todos los registros de inputs registrados desde el teclado y mouse. Si bien Monogame ya incluye una clase Input esta versi\xf3n agrega m\xe9todos \xfatiles para el flujo del juego, estos m\xe9todos se describen a continuaci\xf3n."),(0,o.kt)("h3",{id:"getkeydownkeys-key"},"GetKeyDown(Keys key)"),(0,o.kt)("p",null,"Retorna ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," si la tecla indicada fue presionada en el frame actual."),(0,o.kt)("h3",{id:"getkeyupkeys-key"},"GetKeyUp(Keys key)"),(0,o.kt)("p",null,"Retorna ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," si la tecla indicada fue levantada en el frame actual."),(0,o.kt)("h3",{id:"getkeykeys-key"},"GetKey(Keys key)"),(0,o.kt)("p",null,"Al igual que el m\xe9todo cl\xe1sico verifica si la tecla actual est\xe1 siendo presionada."),(0,o.kt)("h3",{id:"leftclick"},"LeftClick"),(0,o.kt)("p",null,"Retorna ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," si el click izquierdo fue presionado durante ese frame."),(0,o.kt)("h3",{id:"rightclick"},"RightClick"),(0,o.kt)("p",null,"Retorna ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," si el click derecho fue presionado durante ese frame."),(0,o.kt)("h3",{id:"mouseposition"},"MousePosition"),(0,o.kt)("p",null,"Retorna un objeto de tipo ",(0,o.kt)("inlineCode",{parentName:"p"},"Vector2")," con las coordenadas x e y del mouse."),(0,o.kt)("h2",{id:"gameinput-class"},"GameInput ",(0,o.kt)("inlineCode",{parentName:"h2"},"class")),(0,o.kt)("p",null,"esta clase funciona como una m\xe1scara para las acciones del juego, contiene los siguientes botones:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Left"),(0,o.kt)("li",{parentName:"ul"},"Right"),(0,o.kt)("li",{parentName:"ul"},"Up"),(0,o.kt)("li",{parentName:"ul"},"Down"),(0,o.kt)("li",{parentName:"ul"},"A"),(0,o.kt)("li",{parentName:"ul"},"B"),(0,o.kt)("li",{parentName:"ul"},"Start"),(0,o.kt)("li",{parentName:"ul"},"Select")),(0,o.kt)("p",null,"Esto permite que en lugar de asociar una acci\xf3n a una tecla espec\xedfica se puede mapear a uno de estos botones y al iniciar el juego se realizar\xe1 la acci\xf3n haciendo referencia a los botones del GameInput."),(0,o.kt)("p",null,"Los valores de las teclas asociadas a estos gameInputs son indicados en un archivo dentro de la carpeta Content en la ruta ",(0,o.kt)("inlineCode",{parentName:"p"},"Content/Text/input.properties")," Si se modifican estos valores esas asignaciones funcionar\xe1n como las teclas indicadas anteriormente."),(0,o.kt)("h2",{id:"gamepadvirtual-class"},"GamepadVirtual ",(0,o.kt)("inlineCode",{parentName:"h2"},"class")),(0,o.kt)("p",null,"Se creo esta clase para almacenar un gamepad virtual, este gamepadvirtual tiene una serie de botones definidos en un enum llamado ",(0,o.kt)("inlineCode",{parentName:"p"},"GamepadButtons"),". La ventaja de esta clase es que al generar este controlador virtual se pueden generar definiciones de los botones que utiliza, de este modo se puede agregar una definici\xf3n de teclado donde se mapean teclas por ejemplo ASDW como GamepadButton.LEFT/DOWN/RIGHT/UP, esto trae como ventaja el remapeo de un gamepad sin necesidad de tocar el c\xf3digo fuente donde se utiliza. Inicialmente se pueden mapear los botones en ",(0,o.kt)("inlineCode",{parentName:"p"},"Content/Text/gamepad.properties"),"."),(0,o.kt)("p",null,"Adem\xe1s cuenta con un buffer de entrada que permite revisar los inputs realizados en los \xfaltimos frames, esto es \xfatil para probar secuencias de alg\xfan comando como hacer un hadouken por ejemplo. Esta funcionalidad est\xe1 disponible a trav\xe9s del m\xe9todo ",(0,o.kt)("inlineCode",{parentName:"p"},"TestSequence(Queue<GamepadButton> list, bool cancelOnNeutral=false)"),"."),(0,o.kt)("p",null,"Por defecto la clase Input genera un mando virtual para el player 0. Este se puede usar directamente, pero tambi\xe9n se pueden agregar m\xe1s players si es necesario. Siempre se debe acceder a la informaci\xf3n de los gamepadvirtuales a trav\xe9s del singleton Input ya que este se encarga de refrescar la informaci\xf3n correspondiente a estos botones."),(0,o.kt)("p",null,"Se espera en el futuro actualizar este componente para usar un json en el almacenamiento de configuraciones y completar el soporte de un mando real como xbox, ps5, etc."))}d.isMDXComponent=!0}}]);